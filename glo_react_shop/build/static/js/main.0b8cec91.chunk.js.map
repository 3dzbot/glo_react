{"version":3,"sources":["Components/Style/GlobalStyle.js","image/logo.svg","image/icons/user.svg","Components/Functions/context.js","Components/NavBar/NavBar.js","Components/Functions/secondaryFunctions.js","Components/Menu/ListItem.js","Components/Menu/BannerPage.js","Components/Menu/Menu.js","Components/Hooks/useFetch.js","Components/Style/ButtonAdd.js","Components/Modal/CountItem.js","Components/Modal/Toppings.js","Components/Modal/Choices.js","Components/Hooks/useTopping.js","Components/Modal/ModalItem.js","Components/Hooks/useCount.js","Components/Hooks/useChoices.js","image/icons/trash.svg","Components/Order/OrderListItem.js","Components/Order/Order.js","Components/Hooks/useTitle.js","Components/Order/OrderConfirm.js","App.js","Components/Hooks/useAuth.js","Components/Hooks/useOpenItem.js","Components/Hooks/useOrders.js","Components/Hooks/useOrderConfirm.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Context","React","createContext","NavBarStyled","styled","header","Logo","div","H1","h1","ImgLogo","img","Login","button","User","LogOut","span","Figure","figure","NavBar","useContext","auth","authentication","logIn","logOut","src","logoImg","alt","userImg","displayName","title","onClick","totalPriceItems","order","countTopping","topping","filter","item","checked","length","priceTopping","price","count","parcePrice","toLocaleString","style","currency","List","ul","Item","li","ListItem","itemList","setOpenItem","map","name","id","SectionMenu","section","ImgBanner","BannerPage","MenuStyled","main","Menu","res","useState","response","setResponse","error","setError","useEffect","a","fetch","json","fetchData","useFetsh","dbMenu","openItem","burger","other","ButtonAdd","CountWrapper","CountInput","input","ButtonCount","ButtonWrapper","CountItem","setCount","onChange","disabled","type","min","max","value","ToppingWrapper","ToppingLabel","label","ToppingCheckbox","Toppings","toppings","checkToppings","i","ChoiseWrap","ChoiseRadio","ChoiceLabel","Choices","choice","changeChoices","choices","Overlay","Modal","Banner","TitleWrap","TitleElem","TotalPriceItem","ModalItem","orders","setOrders","counter","startCount","e","target","useCount","readyTopping","getTopping","setToppings","index","useToppings","setChoice","useChoices","isEdit","newOrders","OrderItemStyled","ItemName","ItemPrice","TrashBtn","trashImage","ItemNameWrapper","ItemToppings","ItemTopping","OrderListItem","deleteItem","join","refDeleteBtn","useRef","current","ref","OrderStyled","OrderTitle","h2","OrderContent","OrderList","Total","EmptyList","p","TotalPrice","Order","setOpenOrderConfirm","orderConfirm","splice","total","reduce","result","totalCounter","Text","h3","rulesData","itemName","arr","obj","sendOrder","dataBase","newOrder","rules","keys","Object","newObj","key","val","fn","projection","push","set","nameClient","email","OrderConfirm","firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","authFirebase","setAuthentication","provider","GoogleAuthProvider","onAuthStateChanged","user","signInWithPopup","signOut","catch","err","console","useAuth","useOpenItem","useOrders","openOrderConfirm","useOrderConfirm","document","useTitle","Provider","database","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b8cec91.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n    box-sizing: border-box;\r\n}\r\n*,*:before,*:after{box-sizing: inherit;}\r\nbody {\r\n    background-color: #f0f0f0;\r\n    font-family: Roboto, sans-serif;\r\n    margin: 0;\r\n    font-size: 20px;\r\n    color: #000;\r\n}\r\nimg {\r\n    max-width: 100%;\r\n    height: auto;\r\n}\r\na{\r\n    text-decoration: none;\r\n    color: inherit;\r\n}\r\nul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\nh1,h2,h3 {\r\n    font-family: Pacifico, sans-serif;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\ninput {\r\n    appearance: textfield;\r\n}\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n}\r\ninput[type=\"button\"], button{\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex: 0 0 auto;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    border-radius: 0;\r\n    border: none;\r\n    background: transparent;\r\n    font: inherit;\r\n}\r\np {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n`;","export default __webpack_public_path__ + \"static/media/logo.cc8d31f6.svg\";","export default __webpack_public_path__ + \"static/media/user.b604d1e5.svg\";","import React from 'react';\r\n\r\nexport const Context = React.createContext();","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport logoImg from '../../image/logo.svg';\r\nimport userImg from '../../image/icons/user.svg';\r\nimport { Context } from '../Functions/context';\r\n\r\nconst NavBarStyled = styled.header`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999;\r\n    height: 80px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px;\r\n    background-color: #299B01;\r\n    color: #fff;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    display: inline-flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 24px;\r\n    margin-left: 15px;\r\n`;\r\n\r\nconst ImgLogo = styled.img`\r\n    width: 50px;\r\n`;\r\n\r\nconst Login = styled.button`\r\n    flex-direction: column;\r\n`;\r\n\r\nconst User = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n`;\r\n\r\nconst LogOut = styled.span`\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n    margin-right: 30px;\r\n`;\r\n\r\nconst Figure = styled.figure`\r\n    margin: 0 30px;\r\n`;\r\n\r\nexport const NavBar = () => {\r\n    const { auth: { authentication, logIn, logOut } } = useContext(Context);\r\n\r\n    return (\r\n        <NavBarStyled>\r\n            <Logo>\r\n                <ImgLogo src={logoImg} alt=\"logo\" />\r\n                <H1>zDonald's</H1>\r\n            </Logo>\r\n            {authentication ?\r\n                <User>\r\n                    <Figure>\r\n                        <img src={userImg} alt={authentication.displayName} />\r\n                        <figcaption>{authentication.displayName}</figcaption>\r\n                    </Figure>\r\n                    <LogOut title=\"Кнопка выхода\" onClick={logOut}>X</LogOut>\r\n                </User> :\r\n                <Login onClick={logIn}>\r\n                    <Figure>\r\n                        <img src={userImg} alt=\"Кнопка входа\" />\r\n                        <figcaption>войти</figcaption>\r\n                    </Figure>\r\n                </Login>\r\n            }\r\n    \r\n        </NavBarStyled>\r\n    )\r\n};","export const totalPriceItems = order => {\r\n    const countTopping = order.topping && order.topping.filter(item => item.checked).length;\r\n    const priceTopping = order.price * 0.1 * countTopping;\r\n    return (order.price + priceTopping) * order.count;\r\n};\r\n\r\nexport const parcePrice = price => price.toLocaleString('ru-RU',{style:'currency', currency:'RUB'});\r\n\r\nexport const projection = rules => {\r\n    const keys = Object.keys(rules);\r\n    return obj => keys.reduce((newObj, key) => {\r\n        newObj[key] = rules[key].reduce((val, fn, i) => (i ? fn(val) : obj[fn]), null)\r\n        return newObj;\r\n    },{})\r\n};\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { parcePrice } from '../Functions/secondaryFunctions';\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 400px;\r\n    height: 155px;\r\n    background-image: ${({img}) =>  `url(${img})`};\r\n    position: relative;\r\n    background-position: center;\r\n    background-size: cover;\r\n    margin-top: 30px;\r\n    margin-right: 30px;\r\n    padding: 15px;\r\n    color: white;\r\n    font-size: 30px;\r\n    z-index: 1;\r\n    transition: box-shadow 0.2s linear;\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        transition: opacity 0.2s linear;\r\n        top: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n        background-color: black;\r\n        opacity: 30%;\r\n        z-index: -1;\r\n    }\r\n    &:hover {\r\n        cursor: pointer;\r\n        box-shadow: inset 0 0 20px 10px rgba(0,0,0,50%);\r\n        &:after {\r\n            opacity: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ListItem = ({itemList, setOpenItem}) => (\r\n    <List>\r\n        {itemList.map(item=>(\r\n            <Item key={item.id}\r\n                img={item.img}\r\n                onClick={()=>setOpenItem(item)}\r\n            >\r\n                <p>{item.name}</p>\r\n                <p>{ parcePrice(item.price) }</p>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SectionMenu = styled.section`\r\n    position: relative;\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n    &:after {\r\n\t\tcontent: '';\r\n\t\tpadding-top: 210px;\r\n\t}\r\n`;\r\n\r\nconst ImgBanner = styled.img`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n`;\r\n\r\nexport const BannerPage = ({src, alt}) => (\r\n    <SectionMenu>\r\n        <ImgBanner src={src} alt={alt}/>\r\n    </SectionMenu>\r\n    );","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListItem } from './ListItem';\r\nimport { BannerPage } from './BannerPage';\r\nimport { useFetsh } from '../Hooks/useFetch';\r\nimport { Context } from '../Functions/context';\r\n\r\nconst MenuStyled = styled.main`\r\n    background-color: #ccc;\r\n    margin-top: 80px;\r\n    margin-left: 380px;\r\n`;\r\n\r\nconst SectionMenu = styled.section`\r\npadding: 30px;\r\n`;\r\n\r\nexport const Menu = () => {\r\n    const res = useFetsh();\r\n    const dbMenu = res.response;\r\n    const { openItem: { setOpenItem } } = useContext(Context);\r\n\r\n    return (\r\n        <MenuStyled>\r\n            <BannerPage src={'./banners/banner.png'} alt={'banner'}></BannerPage>\r\n            {res.response ?\r\n                <>\r\n                    <SectionMenu>\r\n                        <h2>Burgers</h2>\r\n                        <ListItem itemList={dbMenu.burger}\r\n                            setOpenItem={setOpenItem}\r\n                        />\r\n                    </SectionMenu>\r\n                    <SectionMenu>\r\n                        <h2>Drinks</h2>\r\n                        <ListItem itemList={dbMenu.other}\r\n                            setOpenItem={setOpenItem} />\r\n                    </SectionMenu>\r\n                </> : res.error ? \r\n                <div>Error</div> :\r\n                <div>Loading...</div>}\r\n        </MenuStyled>\r\n    )\r\n};","import { useEffect, useState } from 'react';\r\n\r\nexport const useFetsh = () => {\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            try {\r\n                const json = await fetch('DB.json');\r\n                const res = await json.json();\r\n                setResponse(res);\r\n            } catch(err) {\r\n                setError(err);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return { response, error };\r\n}","import styled from 'styled-components';\r\n\r\nexport const ButtonAdd = styled.button`\r\n    width: 250px;\r\n    height: 65px;\r\n    background-color: #299B01;\r\n    color: #fff;\r\n    font-size: 21px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border: 1px solid #fff;\r\n    margin-top: auto;\r\n    transition-property: color, background-color, border-color;\r\n    transition-duration: .2s;\r\n    &:hover {\r\n        background-color: #fff;\r\n        color: #299B01;\r\n        border-color: #299B01;\r\n    }\r\n    &:disabled {\r\n        background-color: #c4c4c4;\r\n        border-color: #c4c4c4;\r\n        color: #000;\r\n        cursor: not-allowed;\r\n    }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CountWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    width: 100%;\r\n    max-width: calc(100% - 60px);\r\n`;\r\n\r\nconst CountInput = styled.input`\r\n    width: 50px;\r\n    font-size: 20px;\r\n\r\n`;\r\n\r\nconst ButtonCount = styled.button`\r\n    background: transparent;\r\n    color: #000;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport function CountItem({count, setCount, onChange}) {\r\n\r\n    return (\r\n        <CountWrapper>\r\n            <span>Количество</span>\r\n            <ButtonWrapper>\r\n                <ButtonCount disabled={ count <=1 } onClick={()=>setCount(count - 1)}>-</ButtonCount>\r\n                <CountInput type='number' min='1' max='100' value={count < 1 ? 1 : count} onChange={onChange} />\r\n                <ButtonCount onClick={()=>setCount(count + 1)}>+</ButtonCount>\r\n            </ButtonWrapper>  \r\n        </CountWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ToppingWrapper = styled.div`\r\ncolumn-count: 2;\r\nmax-width: 500px;\r\nmargin: 0 auto;\r\ncolumn-gap: 15px;\r\n`;\r\n\r\nconst ToppingLabel = styled.label`\r\n    cursor: pointer;\r\n    display: block;\r\n`;\r\n\r\nconst ToppingCheckbox = styled.input`\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport function Toppings({ toppings, checkToppings }) {\r\n    return (\r\n        <>\r\n            <h3>Добавки</h3>\r\n            <ToppingWrapper>\r\n                {toppings.map((item,i) => (\r\n                    <ToppingLabel key={i}> \r\n                        <ToppingCheckbox \r\n                            type=\"checkbox\" \r\n                            checked={item.checked}\r\n                            onChange={() => checkToppings(i)}\r\n                            /> \r\n                            {item.name} \r\n                        </ToppingLabel>\r\n                ))}\r\n            </ToppingWrapper>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ChoiseWrap = styled.div`\r\n    column-count: 2;\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    column-gap: 15px;\r\n`;\r\n\r\nconst ChoiseRadio = styled.input`\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst ChoiceLabel = styled.label`\r\n    cursor: pointer;\r\n    display: block;\r\n`;\r\n\r\nexport function Choices({ openItem, choice, changeChoices }) {\r\n\r\n    return (\r\n        <>\r\n            <h3>Choices</h3>\r\n            <ChoiseWrap>\r\n                {openItem.choices.map((item,i) => (\r\n                    <ChoiceLabel key={i}> \r\n                        <ChoiseRadio \r\n                            type=\"radio\" \r\n                            name=\"choices\" \r\n                            checked={choice === item }\r\n                            value={item}\r\n                            onChange={changeChoices}\r\n                            /> \r\n                            {item} \r\n                        </ChoiceLabel>\r\n                ))}\r\n            </ChoiseWrap>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\r\n\r\n/*\r\nчтобы вернуть обьект \"кудрявые скобки\" оборачиваем круглыми скобками\r\nчтоб скрипт не подумал что это блок кода\r\n*/\r\nconst getTopping = toppings => toppings.map(item => ({\r\n    name: item, \r\n    checked: false\r\n}));\r\n\r\nexport function useToppings(openItem) {\r\n    const readyTopping = openItem.topping ? openItem.topping :\r\n                openItem.toppings ? getTopping(openItem.toppings) : [];\r\n\r\n    const [ toppings, setToppings ] = useState(readyTopping);\r\n\r\n    const checkToppings = index => {\r\n        setToppings(toppings.map((item, i) => {\r\n            /* интвертируем значение */\r\n            if(i === index) {\r\n                item.checked = !item.checked\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return  { toppings, checkToppings }\r\n}","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ButtonAdd } from '../Style/ButtonAdd';\r\nimport { CountItem } from './CountItem';\r\nimport { useCount } from '../Hooks/useCount';\r\nimport { totalPriceItems } from '../Functions/secondaryFunctions';\r\nimport { parcePrice } from '../Functions/secondaryFunctions';\r\nimport { Toppings } from './Toppings';\r\nimport { Choices } from './Choices';\r\nimport { useToppings } from '../Hooks/useTopping';\r\nimport { useChoices } from '../Hooks/useChoices';\r\nimport { Context } from '../Functions/context';\r\n\r\nexport const Overlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,.5);\r\n    z-index: 20;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    background: #fff;\r\n    width: 600px;\r\n    height: 600px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-bottom: 40px;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n    width: 100%;\r\n    height: 200px;\r\n    background-image: url(${({img})=> img });\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst TitleWrap = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    align-items: center;\r\n    max-width: calc(100% - 60px);\r\n`;\r\n\r\nconst TitleElem = styled.span`\r\n    font-family: Pacifico, sans-serif;\r\n    font-size: 30px;\r\n`;\r\n\r\nconst TotalPriceItem = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const ModalItem = () => {\r\n\r\n    const {\r\n        orders: { orders, setOrders },\r\n        openItem: { openItem, setOpenItem }\r\n    } = useContext(Context);\r\n\r\n    const counter = useCount(openItem.count);\r\n    const toppings = useToppings(openItem);\r\n    const choices = useChoices(openItem);\r\n    const isEdit = openItem.index > -1;\r\n\r\n    const  closeModal = e => {\r\n        if(e.target.id === 'overlay'){\r\n            setOpenItem(null);\r\n        }\r\n    }\r\n\r\n    const order = {\r\n        ...openItem,\r\n        count: counter.count,\r\n        topping: toppings.toppings,\r\n        choice: choices.choice,\r\n    };\r\n\r\n    const editOrder = () => {\r\n        const newOrders = [...orders];\r\n        newOrders[openItem.index] = order;\r\n        setOrders(newOrders);\r\n        setOpenItem(null);\r\n    }\r\n\r\n    \r\n    \r\n    /** добавляем к текущему заказу элементы */\r\n\r\n    const addToOrder = () => {\r\n        setOrders([...orders, order]);\r\n        setOpenItem(null);\r\n    }\r\n    /*\r\n    сместили условие в App.js\r\n    if(!openItem) return null;\r\n    */\r\n    return (\r\n        <Overlay id=\"overlay\" onClick={closeModal}>\r\n            <Modal>\r\n                <Banner img={openItem.img} />\r\n                <TitleWrap>\r\n                    <TitleElem>{openItem.name}</TitleElem>\r\n                    <TitleElem>{openItem.price.toLocaleString('ru-RU',{style:'currency', currency:'RUB'})}</TitleElem>\r\n                </TitleWrap>\r\n                <CountItem {...counter} />\r\n                {openItem.toppings && <Toppings {...toppings} />}\r\n                {openItem.choices && <Choices {...choices} openItem={openItem} />}\r\n                    <TotalPriceItem>\r\n                    <span>Цена:</span>\r\n                    <span>{parcePrice(totalPriceItems(order))}</span>\r\n                </TotalPriceItem>\r\n                <ButtonAdd \r\n                    onClick={isEdit ? editOrder: addToOrder}\r\n                    disabled={order.choices && !order.choice}\r\n                    >{ isEdit ? 'Редактировать' : 'Добавить' }</ButtonAdd>\r\n            </Modal>\r\n        </Overlay>\r\n    )\r\n};","import { useState } from 'react';\r\n\r\nexport function useCount(startCount) {\r\n    const [ count, setCount ] = useState(startCount || 1);\r\n\r\n    const onChange = e => setCount(e.target.value);\r\n\r\n    return  { count, setCount, onChange }\r\n}","import { useState } from 'react';\r\n\r\nexport function useChoices(openItem) {\r\n    const [ choice, setChoice ] = useState();\r\n\r\n    function changeChoices(e) {\r\n        setChoice(e.target.value);\r\n    }\r\n\r\n    return  { choice, changeChoices }\r\n}","export default __webpack_public_path__ + \"static/media/trash.214772e6.svg\";","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport trashImage from '../../image/icons/trash.svg'\r\nimport { totalPriceItems } from '../Functions/secondaryFunctions';\r\nimport { parcePrice } from '../Functions/secondaryFunctions';\r\n\r\nconst OrderItemStyled = styled.li`\r\n    display: flex;\r\n    margin: 15px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ItemName = styled.span`\r\n    flex-grow: 1;\r\n`;\r\nconst ItemPrice = styled.span`\r\n    //margin-left: 20px;\r\n    padding-left: 5px;\r\n    //margin-right: 10px;\r\n    padding-right: 5px;\r\n    min-width: 125px;\r\n    text-align: right;\r\n`;\r\n\r\nconst TrashBtn = styled.button`\r\n    width: 24px;\r\n    height: 24px;\r\n    background-color: transparent;\r\n    background-image: url(${trashImage});\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ItemNameWrapper = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst ItemToppings = styled.div`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst ItemTopping = styled.span`\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    color: #9A9A9A;\r\n    margin-right: 4px;\r\n`;\r\n\r\nexport const OrderListItem = ({ order, index, deleteItem, setOpenItem }) => {\r\n    const topping = order.topping.filter(item=>item.checked)\r\n                .map(item=>item.name)\r\n                .join(', ');\r\n\r\n    const refDeleteBtn = useRef(null);\r\n\r\n    return (\r\n        <OrderItemStyled onClick={(e)=>{\r\n            e.target !== refDeleteBtn.current &&  setOpenItem({...order, index})\r\n        }}>\r\n        <ItemNameWrapper>\r\n            <ItemName>{order.name} {order.choice}</ItemName>\r\n            <ItemToppings>\r\n                {topping && <ItemTopping>{topping}</ItemTopping>}\r\n        </ItemToppings>\r\n        </ItemNameWrapper>\r\n        <span>{order.count}</span>\r\n        <ItemPrice>{ parcePrice(totalPriceItems(order)) }</ItemPrice>\r\n        <TrashBtn ref={refDeleteBtn} onClick={()=>deleteItem(index)} />\r\n    </OrderItemStyled>\r\n    )\r\n};","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ButtonAdd } from '../Style/ButtonAdd';\r\nimport { OrderListItem } from './OrderListItem';\r\nimport { totalPriceItems } from '../Functions/secondaryFunctions';\r\nimport { parcePrice } from '../Functions/secondaryFunctions';\r\nimport { Context } from '../Functions/context';\r\n\r\nconst OrderStyled = styled.section`\r\n    position: fixed;\r\n    top: 80px;\r\n    left: 0;\r\n    bottom: 0;\r\n    background: #fff;\r\n    width: 380px;\r\n    max-width: 100%;\r\n    box-shadow: 3px 4px 5px rgba(0,0,0,.25);\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const OrderTitle = styled.h2`\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nconst OrderContent = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst OrderList = styled.ul`\r\n`;\r\n\r\nexport const Total = styled.div`\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    & span:first-child {\r\n        flex-grow: 1;\r\n    }\r\n`;\r\n\r\nconst EmptyList = styled.p`\r\n    text-align: center;\r\n`;\r\n\r\nexport const TotalPrice = styled.span`\r\n    text-align: right;\r\n    min-width: 65px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nexport const Order = () => {\r\n\r\n    const {\r\n        orders: { orders, setOrders },\r\n        openItem: { setOpenItem },\r\n        auth: { authentication, logIn },\r\n        orderConfirm: { setOpenOrderConfirm }\r\n    } = useContext(Context);\r\n\r\n    const deleteItem = index => {\r\n        const newOrders = [...orders];\r\n        newOrders.splice(index, 1);\r\n        setOrders(newOrders);\r\n    }\r\n\r\n    const total = orders.reduce((result, order) => totalPriceItems(order) + result, 0);\r\n\r\n    const totalCounter = orders.reduce((result, order) => order.count + result, 0);\r\n\r\n    return (\r\n        <OrderStyled>\r\n            <OrderTitle>Ваш заказ</OrderTitle>\r\n            <OrderContent>\r\n                {orders.length ?\r\n                    <OrderList>\r\n                        {orders.map((order, index) => <OrderListItem\r\n                            key={index}\r\n                            order={order}\r\n                            deleteItem={deleteItem}\r\n                            index={index}\r\n                            setOpenItem={setOpenItem}\r\n                        />)}\r\n                    </OrderList> :\r\n                    <EmptyList>Список заказа пуст</EmptyList>}\r\n            </OrderContent>\r\n            {orders.length ?\r\n                <>\r\n                    <Total>\r\n                        <span>Итого</span>\r\n                        <span>{totalCounter}</span>\r\n                        <TotalPrice>{parcePrice(total)}</TotalPrice>\r\n                    </Total>\r\n                    {authentication ?\r\n                        <ButtonAdd onClick={() => setOpenOrderConfirm(true)}>Оформить</ButtonAdd> :\r\n                        <ButtonAdd onClick={logIn}>Авторизируйтесь</ButtonAdd>\r\n                    }\r\n                </> : <></>}\r\n\r\n        </OrderStyled>\r\n    )\r\n}","import { useEffect } from \"react\";\r\n\r\nexport const useTitle = openItem => {\r\n    useEffect(() => {\r\n        document.title = openItem ? openItem.name : `zDonalds`;\r\n    }, [openItem])\r\n}","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Overlay } from '../Modal/ModalItem';\r\nimport { OrderTitle, Total, TotalPrice } from './Order';\r\nimport { ButtonAdd } from '../Style/ButtonAdd';\r\nimport { projection } from '../Functions/secondaryFunctions';\r\nimport { totalPriceItems } from '../Functions/secondaryFunctions';\r\nimport { parcePrice } from '../Functions/secondaryFunctions';\r\nimport { Context } from '../Functions/context';\r\n\r\nconst Modal = styled.div`\r\n    background-color: white;\r\n    width: 600px;\r\n    padding: 30px;\r\n`;\r\nconst Text = styled.h3`\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nconst rulesData = {\r\n    itemName: ['name'],\r\n    price: ['price'],\r\n    count: ['count'],\r\n    topping: ['topping', arr => arr.filter(obj => obj.checked).map(obj => obj.name),  arr => arr.length ? arr : 'no toppings'],\r\n    choice: ['choice', item => item ? item : 'no choices'],\r\n}\r\n\r\nconst sendOrder = (dataBase, orders, authentication) => {\r\n    const newOrder = orders.map(projection(rulesData));\r\n    dataBase.ref('orders').push().set({\r\n        nameClient: authentication.displayName,\r\n        email: authentication.email,\r\n        order: newOrder\r\n    });\r\n}\r\n\r\nexport const OrderConfirm = () => {\r\n    const {\r\n        orders: { orders, setOrders },\r\n        auth: { authentication },\r\n        orderConfirm: { setOpenOrderConfirm },\r\n        firebaseDatabase\r\n    } = useContext(Context);\r\n    const dataBase = firebaseDatabase();\r\n    const total = orders.reduce((result, order) => totalPriceItems(order) + result, 0);\r\n\r\n    return (\r\n        <Overlay>\r\n            <Modal>\r\n                <OrderTitle>{authentication.displayName}</OrderTitle>\r\n                <Text>Осталось подтвердить заказ</Text>\r\n                <Total>\r\n                    <span>Итого:</span>\r\n                    <TotalPrice>{parcePrice(total)}</TotalPrice>\r\n                </Total>\r\n                <ButtonAdd onClick={()=>{\r\n                    sendOrder(dataBase, orders, authentication);\r\n                    setOrders([]);\r\n                    setOpenOrderConfirm(false);\r\n                }}>Подтвердить</ButtonAdd>\r\n            </Modal>\r\n        </Overlay>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { GlobalStyle } from './Components/Style/GlobalStyle';\r\nimport { NavBar } from './Components/NavBar/NavBar';\r\nimport { Menu } from './Components/Menu/Menu';\r\nimport { ModalItem } from './Components/Modal/ModalItem';\r\nimport { Order } from './Components/Order/Order';\r\nimport { useOpenItem } from './Components/Hooks/useOpenItem';\r\nimport { useOrders } from './Components/Hooks/useOrders';\r\nimport { useAuth } from './Components/Hooks/useAuth';\r\nimport { useTitle } from './Components/Hooks/useTitle';\r\nimport { OrderConfirm } from './Components/Order/OrderConfirm';\r\nimport { useOrderConfirm } from './Components/Hooks/useOrderConfirm';\r\nimport { Context } from './Components/Functions/context';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDceNTdwVGwzfpvkutS58dHuzX8VOOkmSM\",\r\n  authDomain: \"gloreact-3a2b0.firebaseapp.com\",\r\n  databaseURL: \"https://gloreact-3a2b0-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"gloreact-3a2b0\",\r\n  storageBucket: \"gloreact-3a2b0.appspot.com\",\r\n  messagingSenderId: \"354995301817\",\r\n  appId: \"1:354995301817:web:929cc08f643fd642a89a68\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfunction App() {\r\n  const auth = useAuth(firebase.auth);\r\n\r\n  /*const [openItem, setOpenItem] = React.useState(null);\r\n  заменили верхнюю константу на хук-компонент */\r\n  const openItem = useOpenItem();\r\n  const orders = useOrders();\r\n  const orderConfirm = useOrderConfirm();\r\n  useTitle(openItem.openItem);\r\n\r\n  return (\r\n    <Context.Provider value={{\r\n      auth,\r\n      openItem,\r\n      orders,\r\n      orderConfirm,\r\n      firebaseDatabase: firebase.database\r\n    }}>\r\n      <GlobalStyle/>\r\n      <NavBar/>\r\n      <Order/>\r\n      <Menu/>\r\n      { openItem.openItem && <ModalItem/>}\r\n      { orderConfirm.openOrderConfirm &&\r\n        <OrderConfirm/> }\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\n/*\r\nдля меню: если есть одно то будет и другое\r\n\r\n<Menu setOpenItem={setOpenItem} />\r\n<ModalItem openItem={openItem} setOpenItem={setOpenItem} />\r\n*/\r\n\r\nexport default App;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useAuth(authFirebase) {\r\n    const [authentication, setAuthentication] = useState(null);\r\n\r\n    const auth = authFirebase();\r\n    const provider = new authFirebase.GoogleAuthProvider();\r\n\r\n    const logIn = () => auth.signInWithPopup(provider);\r\n\r\n    const logOut = () => auth.signOut()\r\n        .catch(err => console.error(err));\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                setAuthentication(user);\r\n            } else {\r\n                setAuthentication(null);\r\n            }\r\n        })\r\n    }, [auth, authentication]);\r\n\r\n    return { authentication, logIn, logOut };\r\n}","import { useState } from 'react';\r\n\r\nexport function useOpenItem() {\r\n    const [ openItem, setOpenItem ] = useState(null);\r\n    return  {openItem, setOpenItem }\r\n}","import { useState } from 'react';\r\n\r\nexport function useOrders() {\r\n    const [ orders, setOrders ] = useState([]);\r\n    return  { orders, setOrders }\r\n}","import { useState } from 'react';\r\n\r\nexport const useOrderConfirm = () => {\r\n    const [openOrderConfirm, setOpenOrderConfirm] = useState(false);\r\n    return { openOrderConfirm, setOpenOrderConfirm }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}